---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ ocp4_workload_solution_pattern_cdc_applicationset_name }}
  namespace: {{ ocp4_workload_solution_pattern_cdc_applicationset_namespace }}
spec:
  generators:
  - list:
      elements:
{% for n in range(1, ocp4_workload_solution_pattern_cdc_user_count | int + 1 ) %}
      - user: {{ ocp4_workload_solution_pattern_cdc_user_prefix }}{{ n }}
{% endfor %}
  template:
    metadata:
      name: "{{ ocp4_workload_solution_pattern_cdc_application_name }}-{% raw %}{{ user }}{% endraw %}"
      namespace: {{ ocp4_workload_solution_pattern_cdc_applicationset_namespace }}
      finalizers:
      - resources-finalizer.argocd.argoproj.io
    spec:
      destination:
        name: ""
        namespace: "{{ ocp4_workload_solution_pattern_cdc_namespace_prefix }}{% raw %}{{ user }}{% endraw %}"
        server: 'https://kubernetes.default.svc'
      project: default
      syncPolicy:
        automated:
          prune: false
          selfHeal: false
      source:
        repoURL: {{ ocp4_workload_solution_pattern_cdc_application_repo }}
        targetRevision: {{ ocp4_workload_solution_pattern_cdc_application_repo_tag }}
        path: {{ ocp4_workload_solution_pattern_cdc_application_repo_path }}
        helm:
          values: |            
            argocd: &argo
              enabled: {{ ocp4_workload_solution_pattern_cdc_argocd_syncwaves_enabled }}

            elasticsearch:
              enabled: {{ ocp4_workload_solution_pattern_cdc_elasticsearch_enabled }}
              argocd: *argo

            cashback-db:
              argocd: *argo

            kafka-broker:
              argocd: *argo
              kafka:
                cluster:
                  replicas: {{ ocp4_workload_solution_pattern_cdc_kafka_cluster_replicas }}
                zookeeper
                  replicas: {{ ocp4_workload_solution_pattern_cdc_kafka_zookeeper_replicas }}
                config:
                  defaultReplicationFactor: {{ ocp4_workload_solution_pattern_cdc_kafka_topic_replication_factor }}
                  offsetsTopicReplicationFactor: {{ ocp4_workload_solution_pattern_cdc_kafka_topic_replication_factor }}
                  transactionStateLogReplicationFactor: {{ ocp4_workload_solution_pattern_cdc_kafka_topic_replication_factor }}
                  transactionStateLogMinIsr: {{ ocp4_workload_solution_pattern_cdc_kafka_topic_replication_factor }}

            kafka-connect:
              argocd: *argo
              replicationFactor: {{ ocp4_workload_solution_pattern_cdc_kafka_topic_replication_factor }}

            kafka-topics:
              argocd: *argo
              kafka:
                cluster:
                  replicationFactor: {{ ocp4_workload_solution_pattern_cdc_kafka_topic_replication_factor }}

            retail-db:
              argocd: *argo

            debezium:
              enabled: {{ ocp4_workload_solution_pattern_cdc_debezium_enabled }}
              topic:
                replicationFactor: {{ ocp4_workload_solution_pattern_cdc_kafka_topic_replication_factor }}

            cashback-connector:
              image: 
                tag: {{ ocp4_workload_solution_pattern_cdc_cashback_connector_image_tag }}

            sales-streams:
              kafka:
                streams:
                  replicationFactor: {{ ocp4_workload_solution_pattern_cdc_kafka_topic_replication_factor }}
